[tool.poetry]
name = "fastapi 框架案例"
version = "0.0.1"
description = "这是一个使用了FastAPI框架技术的Python应用示例"
authors = ["Eryx Lee"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
fastapi = "^0.111.0"
uvicorn = {extras = ["standard"], version = "^0.29.0"}
pydantic = {extras = ["email"], version = "^2.7.1"}
pydantic-settings = "^2.2.1"
aiomysql = "^0.2.0"
sqlmodel = "^0.0.18"
python-jose = "^3.3.0"
bcrypt = "^4.1.3"
redis-om = "^0.3.1"
fastapi-cache2 = "^0.2.1"
pydantic-extra-types = "^2.8.2"
phonenumbers = "^8.13.39"
pillow = "^10.3.0"


[[tool.poetry.source]]
name = "mirrors"
url = "https://pypi.tuna.tsinghua.edu.cn/simple/"
priority = "primary"


[tool.poetry.group.dev.dependencies]
sqlalchemy-utils = "^0.41.2"
httpx = "^0.27.0"
pytest = "^8.2.1"
pytest-asyncio = "^0.23.7"
pytest-timeout = "^2.3.1"
pytest-cov = "^5.0.0"
ruff = "^0.4.10"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 100
show-fixes = true

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = 60

[tool.ruff.lint]
# rules: https://docs.astral.sh/ruff/rules/
select = [
    "E",      # pycodestyle error
    "W",      # pycodestyle warning
    "F",      # pyflakes
    "UP",     # pyupgrade
    "D",      # pydocstyle
    "I",      # isort
    "C90",    # mccabe
    "N",      # pep8-naming
    "ANN",    # flake8-annotations
    "ASYNC",  # flake8-async
    "S",      # flake8-bandit
    "B",      # flake8-bugbear
    "A",      # flake8-builtins
    "COM",    # flake8-commas
    "C4",     # flake8-comprehensions
    "DTZ",    # flake8-datetimez
    "T10",    # flake8-debugger
    "EM",     # flake8-errmsg
    "ISC",    # flake8-implicit-str-concat
    "ICN",    # flake8-import-conventions
    "LOG",    # flake8-logging
    "G",      # flake8-logging-format
    "PIE",    # flake8-pie
    "T20",    # flake8-print
    "PYI",    # flake8-pyi
    "PT",     # flake8-pytest-style
    "Q",      # flake8-quotes
    "RSE",    # flake8-raise
    "RET",    # flake8-return
    "SIM",    # flake8-simplify
    "TCH",    # flake8-type-checking
    "PL",     # Pylint
    "PERF",   # Perflint
    "RUF",    # Ruff-specific rules
]
ignore = [
    "UP009",  # UTF-8 encoding declaration is unnecessary
    "D100",   # Missing docstring in public module
    "D104",   # Missing docstring in public package
    "D105",   # Missing docstring in magic method
    "D107",   # Missing docstring in __init__
    "B008",   # Do not perform function call in argument defaults (not fastapi style)
    "ANN101", # self arguments have type annotations, deprecated
    "ANN102", # cls arguments have type annotations, deprecated
    "PLR0913",# Too many arguments in function definition
    "RUF001", # String contains ambiguous unicode character (chinese char)
    "RUF002", # Docstring contains ambiguous unicode character (chinese comment)
    "RUF003", # Comment contains ambiguous unicode character (chinese comment)
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.mccabe]
max-complexity = 15

[tool.ruff.lint.per-file-ignores]
"**/app/tests/*" = ["D", "S", "T20", "ANN"] # Don't check this rules in unittest
"__init__.py" = ["F401"] # Allow unused import in __init__.py
